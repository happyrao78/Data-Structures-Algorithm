count the occurences of the number

brute force:
tc=o(n) using count varible 

int firstOccurence(vector<int> &arr,int n,int k){
int low=0,high=n-1;
int ans=-1;
while(low<=high){
    int mid=(low+high)/2;
    if(arr[mid]==k){
        ans=mid;
        high=mid-1; // move left eleiminating right search space;
    }
    elif(arr[mid] < k){
        low=mid+1; //eliminate left search space and move right;
    }
    else{
        high=mid-1;
    }
}
return ans;
}

int secondOccurence(vector<int> &arr,int n,int k){
int low=0,high=n-1;
int ans=-1;
while(low<=high){
    int mid=(low+high)/2;
    if(arr[mid]==k){
        ans=mid;
        low=mid+1; // move right eleiminating left search space;
    }
    elif(arr[mid] < k){
        low=mid+1; //eliminate left search space and move right;
    }
    else{
        high=mid-1;
    }
}
return ans;
}

pair<int,int> firstandlastOccurence(vector<int> &arr,int n,int k){
    int first=firstOccurence(arr,n,k);
    if(first ==-1) return {-1,-1};
    int last=secondOccurence(arr,n,k);
    return {first,last};
}

int count(vector<int> &arr, int n,  int k){
    pair<int,int> ans=firstandlastOccurence(arr,n,k);
    if(ans.first==-1) return 0;
    return(ans.second-ans.first+1);
}

tc=o(2*(logn))