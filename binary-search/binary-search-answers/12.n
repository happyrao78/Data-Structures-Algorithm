gas station probelm :

brute force:
tle=k*n tc
==============

better approach:
tc=o(nlogn+klogn) sc=o(n-1);
==============

optimal code:
tc=o(nlogn+klogn) sc=0(1);

int numgasStation(long double dist,vector<int> arr){
	int cnt=0;
	for(int i=1;i<arr.size();i++){
		int numinbetween=(arr[i]-arr[i-1])/dist;
		if((arr[i]-arr[i-1])/dist == numinbetween*dist){
			numinbetween--;
		}
		cnt+=numinbetween;
	}
	return cnt;
}
double minimiseMaxDistance(vector<int> &arr, int k){
	long double low=0;
	long double high=0;
	int n=arr.size();
	for(int i=0;i<n-1;i++){
		high=max(high,(long double)(arr[i+1]-arr[i]));
	}
	long double diff= 1e-6;
	while(high - low > diff){
		long double mid=(low+high)/2.0;
		int cnt=numgasStation(mid,arr);
		if(cnt > k){
			low=mid;
		}
		else{
			high=mid;
		}
	}
	return high;
}
