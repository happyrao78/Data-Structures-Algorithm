find the smallest divisor given a threshold

brute force:
tc-o(n)*o(max(arr elemnt));

==========================

optimal code:
time complexity=o(n)*o(log(max(elemnt in arr)));

int findmax(vector<int> arr){
    int n=arr.size();
    int maxi=INT_MIN;
    for(int i=0;i<n;i++){
        maxi=max(maxi,arr[i]);
    }
    return maxi;
}

int countdivisors(vector<int> arr, int div){
    int sum=0;
    for(int i=0;i<arr.size();i++){
        sum+=ceil((double)arr[i]/(double)div);
    }
    return sum;
}

int smallestdivisor(vector<int> arr, int th){
    int low=1,high=findmax(arr);
    while(low<=high){
        int mid=(low+high)/2;
        if(countdivisors(arr,mid)<=th){
            high=mid-1;
        }
        else{
            low=mid+1;
        }
    }
    return low;
}