search in rotated sorted array but not unique elements. there maybe duplicates.

tc=avg and best case=o(logn) but in worst case where multiple duplicates are present the array size will be trimmed down to n/2 making the tc reduced to o(n/2);
int search(vector<int> &arr,int n, int k){
    int low=0,high=n-1;
    while(low<=high){
        int mid=(low+high)/2;
        if(arr[mid]==k) return true;
        if(arr[low]==arr[mid] && arr[mid]==arr[high]){
            low++; high--;
            continue;
        }
        if(arr[low]<=arr[mid]){
            if(arr[low]<=k && k<=arr[mid]){
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        else{
            if(arr[mid]<=k && k<=arr[high]){
                low=mid+1;
            }
            else{
                high=mid-1;
            }
        }
    }
    return false;
}