// optimal solution 
tc= O(N1+N2) in worst case scenario
sc=O(1) and O(n1+n2) AGAIN IN WCS.
two pointer approach

#include <bits/stdc++.h> 
vector<int> findArrayIntersection(vector<int> &arr1, int n, vector<int> &arr2, int m)
{
	int i=0; //pointing to the first array
	int j=0; // pointitng to the second array
	vector<int> ans;
	while(i < n && j< m){
		if(arr1[i] < arr2[j]) i++;
		else if(arr1[i] > arr2[j]) j++;
		else{
			ans.push_back(arr1[i]);
			i++;
			j++;
		}
	}
	return ans;
}
-------------------------------------------------------------------------------
// brute force approach
tc=o(n1*n2)
sc=o(n) using extra visited array 

vector<int> ans;
vector<int> vis; // extra array jo check krega ki wo value phle visit hui h ya nhi 
for(int i=0;i<m;i++){
    for(int j=0;j<n;j++){
        if(arr1[i] == arr2[j] && vis[j]==0){
            ans.push_back(arr1[i]);
            vis[j]++;
            break;
        }
        if(arr2[j]>arr1[i]) break; kyuki uprwala array hi khtm hogya to intersection elements kha se ayege
    }
}